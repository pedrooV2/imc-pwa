@inject Blazored.LocalStorage.ILocalStorageService LocalStorage
@using Imc.Models

<EditForm Model="@_model" OnValidSubmit="@OnValidSubmit">
    <DataAnnotationsValidator />

    <div class="mb">
        <InputNumber @bind-Value="_model.Height" class="form-input" step="0.01" placeholder="Digite sua altura" />
        <span class="form-input-invalid">
            <ValidationMessage For="@(() => _model.Height)" />
        </span>
    </div>

    <div class="mb">
        <InputNumber @bind-Value="_model.Weight" class="form-input" step="0.1" placeholder="Digite seu peso" />
        <span class="form-input-invalid">
            <ValidationMessage For="@(() => _model.Weight)" />
        </span>
    </div>

    <div class="flex flex-center">
        <button type="submit" class="btn btn-filled btn-auto mb">
            Calcular meu IMC
        </button>
        <a class="btn btn-link" href="#about">
            Entenda o c√°lculo
        </a>
    </div>
</EditForm>

<!-- Event Callback -->
<Dialog @ref="_dialog" OnModalHideCallBack="OnModalHide">
    @if (_model.Imc < 18.6)
    {
        <h1>Abaixo do peso ‚ö†Ô∏è</h1>
        <p>Voc√™ est√° abaixo do peso indicado, siga as recomenda√ß√µes do seu nutricionista para chegar l√°.</p>
    }
    else if (_model.Imc >= 18.6 && _model.Imc <= 24.9)
    {
        <h1>Peso ideal ‚úÖ</h1>
        <p>Parab√©ns! Voc√™ est√° na faixa de peso ideal, continue assim.</p>
    }
    else if (_model.Imc >= 24.9)
    {
        <h1>Sobrepeso üî¥</h1>
        <p>Voc√™ est√° acima do peso indicado, siga as recomenda√ß√µes do seu nutricionista para chegar l√°.</p>
    }
</Dialog>

@code {
    private ImcModel _model = new();
    private Dialog _dialog = null!;

    private async void OnValidSubmit()
    {
        await _dialog.ShowModalAsync();
    }

    private async Task OnModalHide()
    {
        AppState.History.Add(_model);
        await LocalStorage.SetItemAsync("data", AppState.History);
        AppState.NotifyChanges(_model, null);
        _model = new();
    }
}